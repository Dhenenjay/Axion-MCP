{
  "timestamp": "2025-09-15T02:05:52.947Z",
  "tests": [
    {
      "name": "Search Sentinel-2",
      "status": "passed",
      "result": {
        "success": true,
        "datasets": [
          "COPERNICUS/S2_SR_HARMONIZED",
          "COPERNICUS/S2_SR",
          "COPERNICUS/S2"
        ],
        "count": 3,
        "query": "sentinel",
        "message": "Found 3 datasets matching \"sentinel\""
      },
      "duration": 23
    },
    {
      "name": "Filter California",
      "status": "passed",
      "result": {
        "success": true,
        "datasetId": "COPERNICUS/S2_SR_HARMONIZED",
        "imageCount": 831,
        "bandNames": [
          "B1",
          "B2",
          "B3",
          "B4",
          "B5",
          "B6",
          "B7",
          "B8",
          "B8A",
          "B9",
          "B11",
          "B12",
          "AOT",
          "WVP",
          "SCL",
          "TCI_R",
          "TCI_G",
          "TCI_B",
          "MSK_CLDPRB",
          "MSK_SNWPRB",
          "QA10",
          "QA20",
          "QA60",
          "MSK_CLASSI_OPAQUE",
          "MSK_CLASSI_CIRRUS",
          "MSK_CLASSI_SNOW_ICE"
        ],
        "filters": {
          "startDate": "2024-06-01",
          "endDate": "2024-06-30",
          "region": "California",
          "cloudCoverMax": "not specified"
        },
        "message": "Filtered collection contains 831 images"
      },
      "duration": 16979
    },
    {
      "name": "Iowa Geometry",
      "status": "passed",
      "result": {
        "success": true,
        "placeName": "Iowa",
        "geometry": {
          "func": {
            "signature_": {
              "args": [
                {
                  "description": "The feature from which the geometry is taken.",
                  "type": "Element",
                  "name": "feature",
                  "default": null
                },
                {
                  "description": "The maximum amount of error tolerated when performing any necessary reprojection.",
                  "type": "ErrorMargin",
                  "name": "maxError",
                  "default": null,
                  "optional": true
                },
                {
                  "description": "If specified, the geometry will be in this projection. If unspecified, the geometry will be in its default projection.",
                  "type": "Projection",
                  "name": "proj",
                  "default": null,
                  "optional": true
                },
                {
                  "description": "If true, the geometry will have geodesic edges. If false, it will have edges as straight lines in the specified projection. If null, the edge interpretation will be the same as the original geometry. This argument is ignored if proj is not specified.",
                  "type": "Boolean",
                  "name": "geodesics",
                  "default": null,
                  "optional": true
                }
              ],
              "description": "Returns the geometry of a given feature in a given projection.",
              "returns": "Geometry",
              "hidden": true,
              "name": "Element.geometry"
            }
          },
          "args": {
            "feature": {
              "func": {
                "signature_": {
                  "args": [
                    {
                      "description": "The collection from which to select the first entry.",
                      "type": "FeatureCollection",
                      "name": "collection",
                      "default": null
                    }
                  ],
                  "description": "Returns the first entry from a given collection.",
                  "returns": "Element",
                  "name": "Collection.first"
                }
              },
              "args": {
                "collection": {
                  "func": {
                    "signature_": {
                      "args": [
                        {
                          "description": "The collection to filter.",
                          "type": "FeatureCollection",
                          "name": "collection",
                          "default": null
                        },
                        {
                          "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                          "type": "Object",
                          "name": "filter",
                          "default": null
                        }
                      ],
                      "description": "Applies a filter to a given collection.",
                      "returns": "FeatureCollection",
                      "name": "Collection.filter"
                    }
                  },
                  "args": {
                    "collection": {
                      "func": {
                        "signature_": {
                          "args": [
                            {
                              "description": "The asset ID of the table to load.",
                              "type": "String",
                              "name": "tableId",
                              "default": null
                            },
                            {
                              "description": "The name of the column to use as the main feature geometry. Not used if tableId is an asset ID.",
                              "type": "String",
                              "name": "geometryColumn",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "The version of the asset. -1 signifies the latest version. Ignored unless tableId is an asset ID.",
                              "type": "Long",
                              "name": "version",
                              "default": null,
                              "optional": true
                            }
                          ],
                          "description": "Returns a Collection of features from a specified table.",
                          "returns": "FeatureCollection",
                          "name": "Collection.loadTable"
                        }
                      },
                      "args": {
                        "tableId": "TIGER/2016/Counties"
                      },
                      "varName": null,
                      "sourceFrame": null
                    },
                    "filter": {
                      "func": {
                        "signature_": {
                          "args": [
                            {
                              "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                              "type": "String",
                              "name": "leftField",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "The value of the right operand. Should not be specified if rightField is specified.",
                              "type": "Object",
                              "name": "rightValue",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                              "type": "String",
                              "name": "rightField",
                              "default": null,
                              "optional": true
                            },
                            {
                              "description": "The value of the left operand. Should not be specified if leftField is specified.",
                              "type": "Object",
                              "name": "leftValue",
                              "default": null,
                              "optional": true
                            }
                          ],
                          "description": "Creates a unary or binary filter that passes if the two operands are equals.",
                          "returns": "Filter",
                          "name": "Filter.equals"
                        }
                      },
                      "args": {
                        "leftField": {
                          "func": null,
                          "args": null,
                          "varName": null,
                          "sourceFrame": null,
                          "string_": "NAME"
                        },
                        "rightValue": "Iowa"
                      },
                      "varName": null,
                      "sourceFrame": null,
                      "filter_": [
                        {
                          "func": {
                            "signature_": {
                              "args": [
                                {
                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                  "type": "String",
                                  "name": "leftField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                  "type": "Object",
                                  "name": "rightValue",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                  "type": "String",
                                  "name": "rightField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                  "type": "Object",
                                  "name": "leftValue",
                                  "default": null,
                                  "optional": true
                                }
                              ],
                              "description": "Creates a unary or binary filter that passes if the two operands are equals.",
                              "returns": "Filter",
                              "name": "Filter.equals"
                            }
                          },
                          "args": {
                            "leftField": {
                              "func": null,
                              "args": null,
                              "varName": null,
                              "sourceFrame": null,
                              "string_": "NAME"
                            },
                            "rightValue": "Iowa"
                          },
                          "varName": null,
                          "sourceFrame": null
                        }
                      ]
                    }
                  },
                  "varName": null,
                  "sourceFrame": null
                }
              },
              "varName": null,
              "sourceFrame": null
            }
          },
          "varName": null,
          "sourceFrame": null
        },
        "bounds": {
          "geodesic": false,
          "type": "Polygon",
          "coordinates": [
            [
              [
                -90.43004248596827,
                42.8128676073072
              ],
              [
                -89.83785235752518,
                42.8128676073072
              ],
              [
                -89.83785235752518,
                43.209770558977155
              ],
              [
                -90.43004248596827,
                43.209770558977155
              ],
              [
                -90.43004248596827,
                42.8128676073072
              ]
            ]
          ]
        },
        "source": "FAO GAUL/TIGER shapefile",
        "message": "Found geometry for Iowa",
        "usage": "Use this geometry in filter operations"
      },
      "duration": 676
    },
    {
      "name": "Landsat Info",
      "status": "passed",
      "result": {
        "success": true,
        "datasetId": "LANDSAT/LC08/C02/T1_L2",
        "title": "USGS Landsat 8 Collection 2 Tier 1 Level 2",
        "type": "ImageCollection",
        "description": "Landsat 8 surface reflectance and surface temperature",
        "bands": [
          "SR_B1",
          "SR_B2",
          "SR_B3",
          "SR_B4",
          "SR_B5",
          "SR_B6",
          "SR_B7",
          "ST_B10",
          "QA_PIXEL"
        ],
        "spatialResolution": "30m",
        "temporalResolution": "16 days",
        "provider": "USGS",
        "message": "Dataset information retrieved successfully"
      },
      "duration": 5
    },
    {
      "name": "Iowa NDVI",
      "status": "passed",
      "result": {
        "success": true,
        "operation": "index",
        "indexType": "NDVI",
        "indexKey": "ndvi_1757901971159",
        "bands": {
          "red": "B4",
          "green": "B3",
          "blue": "B2",
          "nir": "B8",
          "swir1": "B11",
          "swir2": "B12"
        },
        "message": "Calculated NDVI successfully",
        "result": {
          "func": {
            "signature_": {
              "args": [
                {
                  "description": "The image to clip.",
                  "type": "Image",
                  "name": "input",
                  "default": null
                },
                {
                  "description": "The Geometry or Feature to clip to.",
                  "type": "Object",
                  "name": "geometry",
                  "default": null
                }
              ],
              "description": "Clips an image to a Geometry or Feature (use clipToCollection to clip an image to a FeatureCollection). The output bands correspond exactly to the input bands, except data not covered by the geometry is masked. The output image retains the metadata of the input image.",
              "returns": "Image",
              "name": "Image.clip"
            }
          },
          "args": {
            "input": {
              "func": {
                "signature_": {
                  "args": [
                    {
                      "description": "The image to select bands from.",
                      "type": "Image",
                      "name": "input",
                      "default": null
                    },
                    {
                      "description": "New names for the image's bands. Must exactly match the number of bands in input.",
                      "type": "List",
                      "name": "names",
                      "default": null
                    }
                  ],
                  "description": "Renames the bands of an image.",
                  "returns": "Image",
                  "name": "Image.rename"
                }
              },
              "args": {
                "input": {
                  "func": {
                    "signature_": {
                      "args": [
                        {
                          "description": "The input image.",
                          "type": "Image",
                          "name": "input",
                          "default": null
                        },
                        {
                          "description": "A list of names specifying the bands to use. If not specified, the first and second bands are used.",
                          "type": "List",
                          "name": "bandNames",
                          "default": null,
                          "optional": true
                        }
                      ],
                      "description": "Computes the normalized difference between two bands. If the bands to use are not specified, uses the first two bands. The normalized difference is computed as (first − second) / (first + second). Note that the returned image band name is 'nd', the input image properties are not retained in the output image, and a negative pixel value in either input band will cause the output pixel to be masked. To avoid masking negative input values, use `ee.Image.expression()` to compute normalized difference.",
                      "returns": "Image",
                      "name": "Image.normalizedDifference"
                    }
                  },
                  "args": {
                    "input": {
                      "func": {
                        "signature_": {
                          "args": [
                            {
                              "description": "The image to clip.",
                              "type": "Image",
                              "name": "input",
                              "default": null
                            },
                            {
                              "description": "The Geometry or Feature to clip to.",
                              "type": "Object",
                              "name": "geometry",
                              "default": null
                            }
                          ],
                          "description": "Clips an image to a Geometry or Feature (use clipToCollection to clip an image to a FeatureCollection). The output bands correspond exactly to the input bands, except data not covered by the geometry is masked. The output image retains the metadata of the input image.",
                          "returns": "Image",
                          "name": "Image.clip"
                        }
                      },
                      "args": {
                        "input": {
                          "func": {
                            "signature_": {
                              "args": [
                                {
                                  "description": "The image collection to reduce.",
                                  "type": "ImageCollection",
                                  "name": "collection",
                                  "default": null
                                }
                              ],
                              "description": "Reduces an image collection by calculating the median of all values at each pixel across the stack of all matching bands. Bands are matched by name.",
                              "returns": "Image",
                              "name": "reduce.median"
                            }
                          },
                          "args": {
                            "collection": {
                              "func": {
                                "signature_": {
                                  "args": [
                                    {
                                      "description": "The collection of the elements to which the algorithm is applied.",
                                      "type": "FeatureCollection",
                                      "name": "collection",
                                      "default": null
                                    },
                                    {
                                      "description": "The algorithm being applied to each element.",
                                      "type": "Algorithm",
                                      "name": "baseAlgorithm",
                                      "default": null
                                    },
                                    {
                                      "description": "If true, the mapped algorithm is allowed to return nulls, and the elements for which it returns nulls will be dropped.",
                                      "type": "Boolean",
                                      "name": "dropNulls",
                                      "default": false,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Maps an algorithm over a collection.",
                                  "returns": "FeatureCollection",
                                  "name": "Collection.map"
                                }
                              },
                              "args": {
                                "collection": {
                                  "func": {
                                    "signature_": {
                                      "args": [
                                        {
                                          "description": "The collection to filter.",
                                          "type": "FeatureCollection",
                                          "name": "collection",
                                          "default": null
                                        },
                                        {
                                          "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                          "type": "Object",
                                          "name": "filter",
                                          "default": null
                                        }
                                      ],
                                      "description": "Applies a filter to a given collection.",
                                      "returns": "FeatureCollection",
                                      "name": "Collection.filter"
                                    }
                                  },
                                  "args": {
                                    "collection": {
                                      "func": {
                                        "signature_": {
                                          "args": [
                                            {
                                              "description": "The collection to filter.",
                                              "type": "FeatureCollection",
                                              "name": "collection",
                                              "default": null
                                            },
                                            {
                                              "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                              "type": "Object",
                                              "name": "filter",
                                              "default": null
                                            }
                                          ],
                                          "description": "Applies a filter to a given collection.",
                                          "returns": "FeatureCollection",
                                          "name": "Collection.filter"
                                        }
                                      },
                                      "args": {
                                        "collection": {
                                          "func": {
                                            "signature_": {
                                              "args": [
                                                {
                                                  "description": "The collection to filter.",
                                                  "type": "FeatureCollection",
                                                  "name": "collection",
                                                  "default": null
                                                },
                                                {
                                                  "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                                  "type": "Object",
                                                  "name": "filter",
                                                  "default": null
                                                }
                                              ],
                                              "description": "Applies a filter to a given collection.",
                                              "returns": "FeatureCollection",
                                              "name": "Collection.filter"
                                            }
                                          },
                                          "args": {
                                            "collection": {
                                              "func": {
                                                "signature_": {
                                                  "args": [
                                                    {
                                                      "description": "The asset ID of the image collection.",
                                                      "type": "String",
                                                      "name": "id",
                                                      "default": null
                                                    },
                                                    {
                                                      "description": "The version of the asset. -1 signifies the latest version.",
                                                      "type": "Long",
                                                      "name": "version",
                                                      "default": null,
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Returns the image collection given its ID.",
                                                  "returns": "ImageCollection",
                                                  "name": "ImageCollection.load"
                                                }
                                              },
                                              "args": {
                                                "id": "COPERNICUS/S2_SR_HARMONIZED"
                                              },
                                              "varName": null,
                                              "sourceFrame": null
                                            },
                                            "filter": {
                                              "func": {
                                                "signature_": {
                                                  "args": [
                                                    {
                                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                      "type": "String",
                                                      "name": "leftField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                      "type": "Object",
                                                      "name": "rightValue",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                      "type": "String",
                                                      "name": "rightField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                      "type": "Object",
                                                      "name": "leftValue",
                                                      "default": null,
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                                  "returns": "Filter",
                                                  "name": "Filter.dateRangeContains"
                                                }
                                              },
                                              "args": {
                                                "rightField": {
                                                  "func": null,
                                                  "args": null,
                                                  "varName": null,
                                                  "sourceFrame": null,
                                                  "string_": "system:time_start"
                                                },
                                                "leftValue": {
                                                  "func": {
                                                    "signature_": {
                                                      "args": [
                                                        {
                                                          "description": "",
                                                          "type": "Object",
                                                          "name": "start",
                                                          "default": null
                                                        },
                                                        {
                                                          "description": "",
                                                          "type": "Object",
                                                          "name": "end",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                                          "type": "String",
                                                          "name": "timeZone",
                                                          "default": null,
                                                          "optional": true
                                                        }
                                                      ],
                                                      "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                                      "returns": "DateRange",
                                                      "name": "DateRange",
                                                      "isConstructor": true
                                                    }
                                                  },
                                                  "args": {
                                                    "start": "2024-06-01",
                                                    "end": "2024-06-30"
                                                  },
                                                  "varName": null,
                                                  "sourceFrame": null
                                                }
                                              },
                                              "varName": null,
                                              "sourceFrame": null,
                                              "filter_": [
                                                {
                                                  "func": {
                                                    "signature_": {
                                                      "args": [
                                                        {
                                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                          "type": "String",
                                                          "name": "leftField",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                          "type": "Object",
                                                          "name": "rightValue",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                          "type": "String",
                                                          "name": "rightField",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                          "type": "Object",
                                                          "name": "leftValue",
                                                          "default": null,
                                                          "optional": true
                                                        }
                                                      ],
                                                      "description": "Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.",
                                                      "returns": "Filter",
                                                      "name": "Filter.dateRangeContains"
                                                    }
                                                  },
                                                  "args": {
                                                    "rightField": {
                                                      "func": null,
                                                      "args": null,
                                                      "varName": null,
                                                      "sourceFrame": null,
                                                      "string_": "system:time_start"
                                                    },
                                                    "leftValue": {
                                                      "func": {
                                                        "signature_": {
                                                          "args": [
                                                            {
                                                              "description": "",
                                                              "type": "Object",
                                                              "name": "start",
                                                              "default": null
                                                            },
                                                            {
                                                              "description": "",
                                                              "type": "Object",
                                                              "name": "end",
                                                              "default": null,
                                                              "optional": true
                                                            },
                                                            {
                                                              "description": "If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.",
                                                              "type": "String",
                                                              "name": "timeZone",
                                                              "default": null,
                                                              "optional": true
                                                            }
                                                          ],
                                                          "description": "Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.",
                                                          "returns": "DateRange",
                                                          "name": "DateRange",
                                                          "isConstructor": true
                                                        }
                                                      },
                                                      "args": {
                                                        "start": "2024-06-01",
                                                        "end": "2024-06-30"
                                                      },
                                                      "varName": null,
                                                      "sourceFrame": null
                                                    }
                                                  },
                                                  "varName": null,
                                                  "sourceFrame": null
                                                }
                                              ]
                                            }
                                          },
                                          "varName": null
                                        },
                                        "filter": {
                                          "func": {
                                            "signature_": {
                                              "args": [
                                                {
                                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                  "type": "String",
                                                  "name": "leftField",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                  "type": "Object",
                                                  "name": "rightValue",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                  "type": "String",
                                                  "name": "rightField",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                  "type": "Object",
                                                  "name": "leftValue",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The maximum reprojection error allowed during filter application.",
                                                  "type": "ErrorMargin",
                                                  "name": "maxError",
                                                  "default": {
                                                    "type": "ErrorMargin",
                                                    "unit": "meters",
                                                    "value": 0.1
                                                  },
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                              "returns": "Filter",
                                              "name": "Filter.intersects"
                                            }
                                          },
                                          "args": {
                                            "leftField": {
                                              "func": null,
                                              "args": null,
                                              "varName": null,
                                              "sourceFrame": null,
                                              "string_": ".all"
                                            },
                                            "rightValue": {
                                              "func": {
                                                "signature_": {
                                                  "args": [
                                                    {
                                                      "description": "The geometry of the feature.",
                                                      "type": "Geometry",
                                                      "name": "geometry",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The properties of the feature.",
                                                      "type": "Dictionary",
                                                      "name": "metadata",
                                                      "default": {},
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "Obsolete; has no effect.",
                                                      "type": "String",
                                                      "name": "geometryKey",
                                                      "default": null,
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Returns a Feature composed of the given geometry and metadata.",
                                                  "returns": "Feature",
                                                  "name": "Feature"
                                                }
                                              },
                                              "args": {
                                                "geometry": {
                                                  "func": {
                                                    "signature_": {
                                                      "args": [
                                                        {
                                                          "description": "The feature from which the geometry is taken.",
                                                          "type": "Element",
                                                          "name": "feature",
                                                          "default": null
                                                        },
                                                        {
                                                          "description": "The maximum amount of error tolerated when performing any necessary reprojection.",
                                                          "type": "ErrorMargin",
                                                          "name": "maxError",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "If specified, the geometry will be in this projection. If unspecified, the geometry will be in its default projection.",
                                                          "type": "Projection",
                                                          "name": "proj",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "If true, the geometry will have geodesic edges. If false, it will have edges as straight lines in the specified projection. If null, the edge interpretation will be the same as the original geometry. This argument is ignored if proj is not specified.",
                                                          "type": "Boolean",
                                                          "name": "geodesics",
                                                          "default": null,
                                                          "optional": true
                                                        }
                                                      ],
                                                      "description": "Returns the geometry of a given feature in a given projection.",
                                                      "returns": "Geometry",
                                                      "hidden": true,
                                                      "name": "Element.geometry"
                                                    }
                                                  },
                                                  "args": {
                                                    "feature": {
                                                      "func": {
                                                        "signature_": {
                                                          "args": [
                                                            {
                                                              "description": "The collection from which to select the first entry.",
                                                              "type": "FeatureCollection",
                                                              "name": "collection",
                                                              "default": null
                                                            }
                                                          ],
                                                          "description": "Returns the first entry from a given collection.",
                                                          "returns": "Element",
                                                          "name": "Collection.first"
                                                        }
                                                      },
                                                      "args": {
                                                        "collection": {
                                                          "func": {
                                                            "signature_": {
                                                              "args": [
                                                                {
                                                                  "description": "The collection to filter.",
                                                                  "type": "FeatureCollection",
                                                                  "name": "collection",
                                                                  "default": null
                                                                },
                                                                {
                                                                  "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                                                  "type": "Object",
                                                                  "name": "filter",
                                                                  "default": null
                                                                }
                                                              ],
                                                              "description": "Applies a filter to a given collection.",
                                                              "returns": "FeatureCollection",
                                                              "name": "Collection.filter"
                                                            }
                                                          },
                                                          "args": {
                                                            "collection": {
                                                              "func": {
                                                                "signature_": {
                                                                  "args": [
                                                                    {
                                                                      "description": "The asset ID of the table to load.",
                                                                      "type": "String",
                                                                      "name": "tableId",
                                                                      "default": null
                                                                    },
                                                                    {
                                                                      "description": "The name of the column to use as the main feature geometry. Not used if tableId is an asset ID.",
                                                                      "type": "String",
                                                                      "name": "geometryColumn",
                                                                      "default": null,
                                                                      "optional": true
                                                                    },
                                                                    {
                                                                      "description": "The version of the asset. -1 signifies the latest version. Ignored unless tableId is an asset ID.",
                                                                      "type": "Long",
                                                                      "name": "version",
                                                                      "default": null,
                                                                      "optional": true
                                                                    }
                                                                  ],
                                                                  "description": "Returns a Collection of features from a specified table.",
                                                                  "returns": "FeatureCollection",
                                                                  "name": "Collection.loadTable"
                                                                }
                                                              },
                                                              "args": {
                                                                "tableId": "TIGER/2016/Counties"
                                                              },
                                                              "varName": null,
                                                              "sourceFrame": null
                                                            },
                                                            "filter": {
                                                              "func": {
                                                                "signature_": {
                                                                  "args": [
                                                                    {
                                                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                                      "type": "String",
                                                                      "name": "leftField",
                                                                      "default": null,
                                                                      "optional": true
                                                                    },
                                                                    {
                                                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                                      "type": "Object",
                                                                      "name": "rightValue",
                                                                      "default": null,
                                                                      "optional": true
                                                                    },
                                                                    {
                                                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                                      "type": "String",
                                                                      "name": "rightField",
                                                                      "default": null,
                                                                      "optional": true
                                                                    },
                                                                    {
                                                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                                      "type": "Object",
                                                                      "name": "leftValue",
                                                                      "default": null,
                                                                      "optional": true
                                                                    }
                                                                  ],
                                                                  "description": "Creates a unary or binary filter that passes if the two operands are equals.",
                                                                  "returns": "Filter",
                                                                  "name": "Filter.equals"
                                                                }
                                                              },
                                                              "args": {
                                                                "leftField": {
                                                                  "func": null,
                                                                  "args": null,
                                                                  "varName": null,
                                                                  "sourceFrame": null,
                                                                  "string_": "NAME"
                                                                },
                                                                "rightValue": "Iowa"
                                                              },
                                                              "varName": null,
                                                              "sourceFrame": null,
                                                              "filter_": [
                                                                {
                                                                  "func": {
                                                                    "signature_": {
                                                                      "args": [
                                                                        {
                                                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                                          "type": "String",
                                                                          "name": "leftField",
                                                                          "default": null,
                                                                          "optional": true
                                                                        },
                                                                        {
                                                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                                          "type": "Object",
                                                                          "name": "rightValue",
                                                                          "default": null,
                                                                          "optional": true
                                                                        },
                                                                        {
                                                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                                          "type": "String",
                                                                          "name": "rightField",
                                                                          "default": null,
                                                                          "optional": true
                                                                        },
                                                                        {
                                                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                                          "type": "Object",
                                                                          "name": "leftValue",
                                                                          "default": null,
                                                                          "optional": true
                                                                        }
                                                                      ],
                                                                      "description": "Creates a unary or binary filter that passes if the two operands are equals.",
                                                                      "returns": "Filter",
                                                                      "name": "Filter.equals"
                                                                    }
                                                                  },
                                                                  "args": {
                                                                    "leftField": {
                                                                      "func": null,
                                                                      "args": null,
                                                                      "varName": null,
                                                                      "sourceFrame": null,
                                                                      "string_": "NAME"
                                                                    },
                                                                    "rightValue": "Iowa"
                                                                  },
                                                                  "varName": null,
                                                                  "sourceFrame": null
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          "varName": null,
                                                          "sourceFrame": null
                                                        }
                                                      },
                                                      "varName": null,
                                                      "sourceFrame": null
                                                    }
                                                  },
                                                  "varName": null,
                                                  "sourceFrame": null
                                                }
                                              },
                                              "varName": null,
                                              "sourceFrame": null
                                            }
                                          },
                                          "varName": null,
                                          "sourceFrame": null,
                                          "filter_": [
                                            {
                                              "func": {
                                                "signature_": {
                                                  "args": [
                                                    {
                                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                      "type": "String",
                                                      "name": "leftField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                      "type": "Object",
                                                      "name": "rightValue",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                      "type": "String",
                                                      "name": "rightField",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                      "type": "Object",
                                                      "name": "leftValue",
                                                      "default": null,
                                                      "optional": true
                                                    },
                                                    {
                                                      "description": "The maximum reprojection error allowed during filter application.",
                                                      "type": "ErrorMargin",
                                                      "name": "maxError",
                                                      "default": {
                                                        "type": "ErrorMargin",
                                                        "unit": "meters",
                                                        "value": 0.1
                                                      },
                                                      "optional": true
                                                    }
                                                  ],
                                                  "description": "Creates a unary or binary filter that passes if the left geometry intersects the right geometry.",
                                                  "returns": "Filter",
                                                  "name": "Filter.intersects"
                                                }
                                              },
                                              "args": {
                                                "leftField": {
                                                  "func": null,
                                                  "args": null,
                                                  "varName": null,
                                                  "sourceFrame": null,
                                                  "string_": ".all"
                                                },
                                                "rightValue": {
                                                  "func": {
                                                    "signature_": {
                                                      "args": [
                                                        {
                                                          "description": "The geometry of the feature.",
                                                          "type": "Geometry",
                                                          "name": "geometry",
                                                          "default": null,
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "The properties of the feature.",
                                                          "type": "Dictionary",
                                                          "name": "metadata",
                                                          "default": {},
                                                          "optional": true
                                                        },
                                                        {
                                                          "description": "Obsolete; has no effect.",
                                                          "type": "String",
                                                          "name": "geometryKey",
                                                          "default": null,
                                                          "optional": true
                                                        }
                                                      ],
                                                      "description": "Returns a Feature composed of the given geometry and metadata.",
                                                      "returns": "Feature",
                                                      "name": "Feature"
                                                    }
                                                  },
                                                  "args": {
                                                    "geometry": {
                                                      "func": {
                                                        "signature_": {
                                                          "args": [
                                                            {
                                                              "description": "The feature from which the geometry is taken.",
                                                              "type": "Element",
                                                              "name": "feature",
                                                              "default": null
                                                            },
                                                            {
                                                              "description": "The maximum amount of error tolerated when performing any necessary reprojection.",
                                                              "type": "ErrorMargin",
                                                              "name": "maxError",
                                                              "default": null,
                                                              "optional": true
                                                            },
                                                            {
                                                              "description": "If specified, the geometry will be in this projection. If unspecified, the geometry will be in its default projection.",
                                                              "type": "Projection",
                                                              "name": "proj",
                                                              "default": null,
                                                              "optional": true
                                                            },
                                                            {
                                                              "description": "If true, the geometry will have geodesic edges. If false, it will have edges as straight lines in the specified projection. If null, the edge interpretation will be the same as the original geometry. This argument is ignored if proj is not specified.",
                                                              "type": "Boolean",
                                                              "name": "geodesics",
                                                              "default": null,
                                                              "optional": true
                                                            }
                                                          ],
                                                          "description": "Returns the geometry of a given feature in a given projection.",
                                                          "returns": "Geometry",
                                                          "hidden": true,
                                                          "name": "Element.geometry"
                                                        }
                                                      },
                                                      "args": {
                                                        "feature": {
                                                          "func": {
                                                            "signature_": {
                                                              "args": [
                                                                {
                                                                  "description": "The collection from which to select the first entry.",
                                                                  "type": "FeatureCollection",
                                                                  "name": "collection",
                                                                  "default": null
                                                                }
                                                              ],
                                                              "description": "Returns the first entry from a given collection.",
                                                              "returns": "Element",
                                                              "name": "Collection.first"
                                                            }
                                                          },
                                                          "args": {
                                                            "collection": {
                                                              "func": {
                                                                "signature_": {
                                                                  "args": [
                                                                    {
                                                                      "description": "The collection to filter.",
                                                                      "type": "FeatureCollection",
                                                                      "name": "collection",
                                                                      "default": null
                                                                    },
                                                                    {
                                                                      "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                                                      "type": "Object",
                                                                      "name": "filter",
                                                                      "default": null
                                                                    }
                                                                  ],
                                                                  "description": "Applies a filter to a given collection.",
                                                                  "returns": "FeatureCollection",
                                                                  "name": "Collection.filter"
                                                                }
                                                              },
                                                              "args": {
                                                                "collection": {
                                                                  "func": {
                                                                    "signature_": {
                                                                      "args": [
                                                                        {
                                                                          "description": "The asset ID of the table to load.",
                                                                          "type": "String",
                                                                          "name": "tableId",
                                                                          "default": null
                                                                        },
                                                                        {
                                                                          "description": "The name of the column to use as the main feature geometry. Not used if tableId is an asset ID.",
                                                                          "type": "String",
                                                                          "name": "geometryColumn",
                                                                          "default": null,
                                                                          "optional": true
                                                                        },
                                                                        {
                                                                          "description": "The version of the asset. -1 signifies the latest version. Ignored unless tableId is an asset ID.",
                                                                          "type": "Long",
                                                                          "name": "version",
                                                                          "default": null,
                                                                          "optional": true
                                                                        }
                                                                      ],
                                                                      "description": "Returns a Collection of features from a specified table.",
                                                                      "returns": "FeatureCollection",
                                                                      "name": "Collection.loadTable"
                                                                    }
                                                                  },
                                                                  "args": {
                                                                    "tableId": "TIGER/2016/Counties"
                                                                  },
                                                                  "varName": null,
                                                                  "sourceFrame": null
                                                                },
                                                                "filter": {
                                                                  "func": {
                                                                    "signature_": {
                                                                      "args": [
                                                                        {
                                                                          "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                                          "type": "String",
                                                                          "name": "leftField",
                                                                          "default": null,
                                                                          "optional": true
                                                                        },
                                                                        {
                                                                          "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                                          "type": "Object",
                                                                          "name": "rightValue",
                                                                          "default": null,
                                                                          "optional": true
                                                                        },
                                                                        {
                                                                          "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                                          "type": "String",
                                                                          "name": "rightField",
                                                                          "default": null,
                                                                          "optional": true
                                                                        },
                                                                        {
                                                                          "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                                          "type": "Object",
                                                                          "name": "leftValue",
                                                                          "default": null,
                                                                          "optional": true
                                                                        }
                                                                      ],
                                                                      "description": "Creates a unary or binary filter that passes if the two operands are equals.",
                                                                      "returns": "Filter",
                                                                      "name": "Filter.equals"
                                                                    }
                                                                  },
                                                                  "args": {
                                                                    "leftField": {
                                                                      "func": null,
                                                                      "args": null,
                                                                      "varName": null,
                                                                      "sourceFrame": null,
                                                                      "string_": "NAME"
                                                                    },
                                                                    "rightValue": "Iowa"
                                                                  },
                                                                  "varName": null,
                                                                  "sourceFrame": null,
                                                                  "filter_": [
                                                                    {
                                                                      "func": {
                                                                        "signature_": {
                                                                          "args": [
                                                                            {
                                                                              "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                                              "type": "String",
                                                                              "name": "leftField",
                                                                              "default": null,
                                                                              "optional": true
                                                                            },
                                                                            {
                                                                              "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                                              "type": "Object",
                                                                              "name": "rightValue",
                                                                              "default": null,
                                                                              "optional": true
                                                                            },
                                                                            {
                                                                              "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                                              "type": "String",
                                                                              "name": "rightField",
                                                                              "default": null,
                                                                              "optional": true
                                                                            },
                                                                            {
                                                                              "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                                              "type": "Object",
                                                                              "name": "leftValue",
                                                                              "default": null,
                                                                              "optional": true
                                                                            }
                                                                          ],
                                                                          "description": "Creates a unary or binary filter that passes if the two operands are equals.",
                                                                          "returns": "Filter",
                                                                          "name": "Filter.equals"
                                                                        }
                                                                      },
                                                                      "args": {
                                                                        "leftField": {
                                                                          "func": null,
                                                                          "args": null,
                                                                          "varName": null,
                                                                          "sourceFrame": null,
                                                                          "string_": "NAME"
                                                                        },
                                                                        "rightValue": "Iowa"
                                                                      },
                                                                      "varName": null,
                                                                      "sourceFrame": null
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "varName": null,
                                                              "sourceFrame": null
                                                            }
                                                          },
                                                          "varName": null,
                                                          "sourceFrame": null
                                                        }
                                                      },
                                                      "varName": null,
                                                      "sourceFrame": null
                                                    }
                                                  },
                                                  "varName": null,
                                                  "sourceFrame": null
                                                }
                                              },
                                              "varName": null,
                                              "sourceFrame": null
                                            }
                                          ]
                                        }
                                      },
                                      "varName": null
                                    },
                                    "filter": {
                                      "func": {
                                        "signature_": {
                                          "args": [
                                            {
                                              "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                              "type": "String",
                                              "name": "leftField",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                              "type": "Object",
                                              "name": "rightValue",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                              "type": "String",
                                              "name": "rightField",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                              "type": "Object",
                                              "name": "leftValue",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Creates a unary or binary filter that passes if the left operand is less than the right operand.",
                                          "returns": "Filter",
                                          "name": "Filter.lessThan"
                                        }
                                      },
                                      "args": {
                                        "leftField": {
                                          "func": null,
                                          "args": null,
                                          "varName": null,
                                          "sourceFrame": null,
                                          "string_": "CLOUDY_PIXEL_PERCENTAGE"
                                        },
                                        "rightValue": 20
                                      },
                                      "varName": null,
                                      "sourceFrame": null,
                                      "filter_": [
                                        {
                                          "func": {
                                            "signature_": {
                                              "args": [
                                                {
                                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                  "type": "String",
                                                  "name": "leftField",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                  "type": "Object",
                                                  "name": "rightValue",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                  "type": "String",
                                                  "name": "rightField",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                  "type": "Object",
                                                  "name": "leftValue",
                                                  "default": null,
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Creates a unary or binary filter that passes if the left operand is less than the right operand.",
                                              "returns": "Filter",
                                              "name": "Filter.lessThan"
                                            }
                                          },
                                          "args": {
                                            "leftField": {
                                              "func": null,
                                              "args": null,
                                              "varName": null,
                                              "sourceFrame": null,
                                              "string_": "CLOUDY_PIXEL_PERCENTAGE"
                                            },
                                            "rightValue": 20
                                          },
                                          "varName": null,
                                          "sourceFrame": null
                                        }
                                      ]
                                    }
                                  },
                                  "varName": null
                                },
                                "baseAlgorithm": {
                                  "signature_": {
                                    "name": "",
                                    "returns": "Object",
                                    "args": [
                                      {
                                        "name": "_MAPPING_VAR_0_0",
                                        "type": "Object"
                                      }
                                    ]
                                  },
                                  "body_": {
                                    "func": {
                                      "signature_": {
                                        "args": [
                                          {
                                            "description": "The object whose properties to override.",
                                            "type": "Element",
                                            "name": "destination",
                                            "default": null,
                                            "optional": true
                                          },
                                          {
                                            "description": "The object from which to copy the properties.",
                                            "type": "Element",
                                            "name": "source",
                                            "default": null,
                                            "optional": true
                                          },
                                          {
                                            "description": "The properties to copy. If omitted, all ordinary (i.e. non-system) properties are copied.",
                                            "type": "List",
                                            "name": "properties",
                                            "default": null,
                                            "optional": true
                                          },
                                          {
                                            "description": "The list of properties to exclude when copying all properties. Must not be specified if properties is.",
                                            "type": "List",
                                            "name": "exclude",
                                            "default": null,
                                            "optional": true
                                          }
                                        ],
                                        "description": "Copies metadata properties from one element to another.",
                                        "returns": "Element",
                                        "name": "Image.copyProperties"
                                      }
                                    },
                                    "args": {
                                      "destination": {
                                        "func": {
                                          "signature_": {
                                            "args": [
                                              {
                                                "description": "The image to select bands from.",
                                                "type": "Image",
                                                "name": "input",
                                                "default": null
                                              },
                                              {
                                                "description": "A list of names, regexes, or numeric indices specifying the bands to select.",
                                                "type": "List",
                                                "name": "bandSelectors",
                                                "default": null
                                              },
                                              {
                                                "description": "Optional new names for the output bands. Must match the number of bands selected.",
                                                "type": "List",
                                                "name": "newNames",
                                                "default": null,
                                                "optional": true
                                              }
                                            ],
                                            "description": "Selects bands from an image by name, RE2-compatible regex, or index and optionally renames them.",
                                            "returns": "Image",
                                            "name": "Image.select"
                                          }
                                        },
                                        "args": {
                                          "input": {
                                            "func": {
                                              "signature_": {
                                                "args": [
                                                  {
                                                    "description": "The image from which the left operand bands are taken.",
                                                    "type": "Image",
                                                    "name": "image1",
                                                    "default": null
                                                  },
                                                  {
                                                    "description": "The image from which the right operand bands are taken.",
                                                    "type": "Image",
                                                    "name": "image2",
                                                    "default": null
                                                  }
                                                ],
                                                "description": "Divides the first value by the second, returning 0 for division by 0 for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.",
                                                "returns": "Image",
                                                "name": "Image.divide"
                                              }
                                            },
                                            "args": {
                                              "image1": {
                                                "func": {
                                                  "signature_": {
                                                    "args": [
                                                      {
                                                        "description": "Input image.",
                                                        "type": "Image",
                                                        "name": "image",
                                                        "default": null
                                                      },
                                                      {
                                                        "description": "New mask for the image, as a floating-point value in the range [0, 1] (invalid = 0, valid = 1). If this image has a single band, it is used for all bands in the input image; otherwise, must have the same number of bands as the input image.",
                                                        "type": "Image",
                                                        "name": "mask",
                                                        "default": null
                                                      }
                                                    ],
                                                    "description": "Updates an image's mask at all positions where the existing mask is not zero. The output image retains the metadata and footprint of the input image.",
                                                    "returns": "Image",
                                                    "name": "Image.updateMask"
                                                  }
                                                },
                                                "args": {
                                                  "image": {
                                                    "func": null,
                                                    "args": null,
                                                    "varName": "_MAPPING_VAR_0_0",
                                                    "sourceFrame": null
                                                  },
                                                  "mask": {
                                                    "func": {
                                                      "signature_": {
                                                        "args": [
                                                          {
                                                            "description": "The image from which the left operand bands are taken.",
                                                            "type": "Image",
                                                            "name": "image1",
                                                            "default": null
                                                          },
                                                          {
                                                            "description": "The image from which the right operand bands are taken.",
                                                            "type": "Image",
                                                            "name": "image2",
                                                            "default": null
                                                          }
                                                        ],
                                                        "description": "Returns 1 if and only if both values are non-zero for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is boolean.",
                                                        "returns": "Image",
                                                        "name": "Image.and"
                                                      }
                                                    },
                                                    "args": {
                                                      "image1": {
                                                        "func": {
                                                          "signature_": {
                                                            "args": [
                                                              {
                                                                "description": "The image from which the left operand bands are taken.",
                                                                "type": "Image",
                                                                "name": "image1",
                                                                "default": null
                                                              },
                                                              {
                                                                "description": "The image from which the right operand bands are taken.",
                                                                "type": "Image",
                                                                "name": "image2",
                                                                "default": null
                                                              }
                                                            ],
                                                            "description": "Returns 1 if and only if the first value is equal to the second for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is boolean.",
                                                            "returns": "Image",
                                                            "name": "Image.eq"
                                                          }
                                                        },
                                                        "args": {
                                                          "image1": {
                                                            "func": {
                                                              "signature_": {
                                                                "args": [
                                                                  {
                                                                    "description": "The image from which the left operand bands are taken.",
                                                                    "type": "Image",
                                                                    "name": "image1",
                                                                    "default": null
                                                                  },
                                                                  {
                                                                    "description": "The image from which the right operand bands are taken.",
                                                                    "type": "Image",
                                                                    "name": "image2",
                                                                    "default": null
                                                                  }
                                                                ],
                                                                "description": "Calculates the bitwise AND of the input values for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.",
                                                                "returns": "Image",
                                                                "name": "Image.bitwiseAnd"
                                                              }
                                                            },
                                                            "args": {
                                                              "image1": {
                                                                "func": {
                                                                  "signature_": {
                                                                    "args": [
                                                                      {
                                                                        "description": "The image to select bands from.",
                                                                        "type": "Image",
                                                                        "name": "input",
                                                                        "default": null
                                                                      },
                                                                      {
                                                                        "description": "A list of names, regexes, or numeric indices specifying the bands to select.",
                                                                        "type": "List",
                                                                        "name": "bandSelectors",
                                                                        "default": null
                                                                      },
                                                                      {
                                                                        "description": "Optional new names for the output bands. Must match the number of bands selected.",
                                                                        "type": "List",
                                                                        "name": "newNames",
                                                                        "default": null,
                                                                        "optional": true
                                                                      }
                                                                    ],
                                                                    "description": "Selects bands from an image by name, RE2-compatible regex, or index and optionally renames them.",
                                                                    "returns": "Image",
                                                                    "name": "Image.select"
                                                                  }
                                                                },
                                                                "args": {
                                                                  "input": {
                                                                    "func": null,
                                                                    "args": null,
                                                                    "varName": "_MAPPING_VAR_0_0",
                                                                    "sourceFrame": null
                                                                  },
                                                                  "bandSelectors": {
                                                                    "func": null,
                                                                    "args": null,
                                                                    "varName": null,
                                                                    "sourceFrame": null,
                                                                    "list_": [
                                                                      "QA60"
                                                                    ]
                                                                  }
                                                                },
                                                                "varName": null,
                                                                "sourceFrame": null
                                                              },
                                                              "image2": {
                                                                "func": {
                                                                  "signature_": {
                                                                    "args": [
                                                                      {
                                                                        "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                                                                        "type": "Object",
                                                                        "name": "value",
                                                                        "default": null
                                                                      }
                                                                    ],
                                                                    "description": "Generates an image containing a constant value everywhere.",
                                                                    "returns": "Image",
                                                                    "name": "Image.constant"
                                                                  }
                                                                },
                                                                "args": {
                                                                  "value": 1024
                                                                },
                                                                "varName": null,
                                                                "sourceFrame": null
                                                              }
                                                            },
                                                            "varName": null,
                                                            "sourceFrame": null
                                                          },
                                                          "image2": {
                                                            "func": {
                                                              "signature_": {
                                                                "args": [
                                                                  {
                                                                    "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                                                                    "type": "Object",
                                                                    "name": "value",
                                                                    "default": null
                                                                  }
                                                                ],
                                                                "description": "Generates an image containing a constant value everywhere.",
                                                                "returns": "Image",
                                                                "name": "Image.constant"
                                                              }
                                                            },
                                                            "args": {
                                                              "value": 0
                                                            },
                                                            "varName": null,
                                                            "sourceFrame": null
                                                          }
                                                        },
                                                        "varName": null,
                                                        "sourceFrame": null
                                                      },
                                                      "image2": {
                                                        "func": {
                                                          "signature_": {
                                                            "args": [
                                                              {
                                                                "description": "The image from which the left operand bands are taken.",
                                                                "type": "Image",
                                                                "name": "image1",
                                                                "default": null
                                                              },
                                                              {
                                                                "description": "The image from which the right operand bands are taken.",
                                                                "type": "Image",
                                                                "name": "image2",
                                                                "default": null
                                                              }
                                                            ],
                                                            "description": "Returns 1 if and only if the first value is equal to the second for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is boolean.",
                                                            "returns": "Image",
                                                            "name": "Image.eq"
                                                          }
                                                        },
                                                        "args": {
                                                          "image1": {
                                                            "func": {
                                                              "signature_": {
                                                                "args": [
                                                                  {
                                                                    "description": "The image from which the left operand bands are taken.",
                                                                    "type": "Image",
                                                                    "name": "image1",
                                                                    "default": null
                                                                  },
                                                                  {
                                                                    "description": "The image from which the right operand bands are taken.",
                                                                    "type": "Image",
                                                                    "name": "image2",
                                                                    "default": null
                                                                  }
                                                                ],
                                                                "description": "Calculates the bitwise AND of the input values for each matched pair of bands in image1 and image2. If either image1 or image2 has only 1 band, then it is used against all the bands in the other image. If the images have the same number of bands, but not the same names, they're used pairwise in the natural order. The output bands are named for the longer of the two inputs, or if they're equal in length, in image1's order. The type of the output pixels is the union of the input types.",
                                                                "returns": "Image",
                                                                "name": "Image.bitwiseAnd"
                                                              }
                                                            },
                                                            "args": {
                                                              "image1": {
                                                                "func": {
                                                                  "signature_": {
                                                                    "args": [
                                                                      {
                                                                        "description": "The image to select bands from.",
                                                                        "type": "Image",
                                                                        "name": "input",
                                                                        "default": null
                                                                      },
                                                                      {
                                                                        "description": "A list of names, regexes, or numeric indices specifying the bands to select.",
                                                                        "type": "List",
                                                                        "name": "bandSelectors",
                                                                        "default": null
                                                                      },
                                                                      {
                                                                        "description": "Optional new names for the output bands. Must match the number of bands selected.",
                                                                        "type": "List",
                                                                        "name": "newNames",
                                                                        "default": null,
                                                                        "optional": true
                                                                      }
                                                                    ],
                                                                    "description": "Selects bands from an image by name, RE2-compatible regex, or index and optionally renames them.",
                                                                    "returns": "Image",
                                                                    "name": "Image.select"
                                                                  }
                                                                },
                                                                "args": {
                                                                  "input": {
                                                                    "func": null,
                                                                    "args": null,
                                                                    "varName": "_MAPPING_VAR_0_0",
                                                                    "sourceFrame": null
                                                                  },
                                                                  "bandSelectors": {
                                                                    "func": null,
                                                                    "args": null,
                                                                    "varName": null,
                                                                    "sourceFrame": null,
                                                                    "list_": [
                                                                      "QA60"
                                                                    ]
                                                                  }
                                                                },
                                                                "varName": null,
                                                                "sourceFrame": null
                                                              },
                                                              "image2": {
                                                                "func": {
                                                                  "signature_": {
                                                                    "args": [
                                                                      {
                                                                        "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                                                                        "type": "Object",
                                                                        "name": "value",
                                                                        "default": null
                                                                      }
                                                                    ],
                                                                    "description": "Generates an image containing a constant value everywhere.",
                                                                    "returns": "Image",
                                                                    "name": "Image.constant"
                                                                  }
                                                                },
                                                                "args": {
                                                                  "value": 2048
                                                                },
                                                                "varName": null,
                                                                "sourceFrame": null
                                                              }
                                                            },
                                                            "varName": null,
                                                            "sourceFrame": null
                                                          },
                                                          "image2": {
                                                            "func": {
                                                              "signature_": {
                                                                "args": [
                                                                  {
                                                                    "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                                                                    "type": "Object",
                                                                    "name": "value",
                                                                    "default": null
                                                                  }
                                                                ],
                                                                "description": "Generates an image containing a constant value everywhere.",
                                                                "returns": "Image",
                                                                "name": "Image.constant"
                                                              }
                                                            },
                                                            "args": {
                                                              "value": 0
                                                            },
                                                            "varName": null,
                                                            "sourceFrame": null
                                                          }
                                                        },
                                                        "varName": null,
                                                        "sourceFrame": null
                                                      }
                                                    },
                                                    "varName": null,
                                                    "sourceFrame": null
                                                  }
                                                },
                                                "varName": null,
                                                "sourceFrame": null
                                              },
                                              "image2": {
                                                "func": {
                                                  "signature_": {
                                                    "args": [
                                                      {
                                                        "description": "The value of the pixels in the constant image. Must be a number or an Array or a list of numbers or Arrays.",
                                                        "type": "Object",
                                                        "name": "value",
                                                        "default": null
                                                      }
                                                    ],
                                                    "description": "Generates an image containing a constant value everywhere.",
                                                    "returns": "Image",
                                                    "name": "Image.constant"
                                                  }
                                                },
                                                "args": {
                                                  "value": 10000
                                                },
                                                "varName": null,
                                                "sourceFrame": null
                                              }
                                            },
                                            "varName": null,
                                            "sourceFrame": null
                                          },
                                          "bandSelectors": {
                                            "func": null,
                                            "args": null,
                                            "varName": null,
                                            "sourceFrame": null,
                                            "list_": [
                                              "B.*"
                                            ]
                                          }
                                        },
                                        "varName": null,
                                        "sourceFrame": null
                                      },
                                      "source": {
                                        "func": null,
                                        "args": null,
                                        "varName": "_MAPPING_VAR_0_0",
                                        "sourceFrame": null
                                      },
                                      "properties": {
                                        "func": null,
                                        "args": null,
                                        "varName": null,
                                        "sourceFrame": null,
                                        "list_": [
                                          "system:time_start"
                                        ]
                                      }
                                    },
                                    "varName": null,
                                    "sourceFrame": null
                                  }
                                }
                              },
                              "varName": null
                            }
                          },
                          "varName": null,
                          "sourceFrame": null
                        },
                        "geometry": {
                          "func": {
                            "signature_": {
                              "args": [
                                {
                                  "description": "The feature from which the geometry is taken.",
                                  "type": "Element",
                                  "name": "feature",
                                  "default": null
                                },
                                {
                                  "description": "The maximum amount of error tolerated when performing any necessary reprojection.",
                                  "type": "ErrorMargin",
                                  "name": "maxError",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "If specified, the geometry will be in this projection. If unspecified, the geometry will be in its default projection.",
                                  "type": "Projection",
                                  "name": "proj",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "If true, the geometry will have geodesic edges. If false, it will have edges as straight lines in the specified projection. If null, the edge interpretation will be the same as the original geometry. This argument is ignored if proj is not specified.",
                                  "type": "Boolean",
                                  "name": "geodesics",
                                  "default": null,
                                  "optional": true
                                }
                              ],
                              "description": "Returns the geometry of a given feature in a given projection.",
                              "returns": "Geometry",
                              "hidden": true,
                              "name": "Element.geometry"
                            }
                          },
                          "args": {
                            "feature": {
                              "func": {
                                "signature_": {
                                  "args": [
                                    {
                                      "description": "The collection from which to select the first entry.",
                                      "type": "FeatureCollection",
                                      "name": "collection",
                                      "default": null
                                    }
                                  ],
                                  "description": "Returns the first entry from a given collection.",
                                  "returns": "Element",
                                  "name": "Collection.first"
                                }
                              },
                              "args": {
                                "collection": {
                                  "func": {
                                    "signature_": {
                                      "args": [
                                        {
                                          "description": "The collection to filter.",
                                          "type": "FeatureCollection",
                                          "name": "collection",
                                          "default": null
                                        },
                                        {
                                          "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                                          "type": "Object",
                                          "name": "filter",
                                          "default": null
                                        }
                                      ],
                                      "description": "Applies a filter to a given collection.",
                                      "returns": "FeatureCollection",
                                      "name": "Collection.filter"
                                    }
                                  },
                                  "args": {
                                    "collection": {
                                      "func": {
                                        "signature_": {
                                          "args": [
                                            {
                                              "description": "The asset ID of the table to load.",
                                              "type": "String",
                                              "name": "tableId",
                                              "default": null
                                            },
                                            {
                                              "description": "The name of the column to use as the main feature geometry. Not used if tableId is an asset ID.",
                                              "type": "String",
                                              "name": "geometryColumn",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The version of the asset. -1 signifies the latest version. Ignored unless tableId is an asset ID.",
                                              "type": "Long",
                                              "name": "version",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Returns a Collection of features from a specified table.",
                                          "returns": "FeatureCollection",
                                          "name": "Collection.loadTable"
                                        }
                                      },
                                      "args": {
                                        "tableId": "TIGER/2016/Counties"
                                      },
                                      "varName": null,
                                      "sourceFrame": null
                                    },
                                    "filter": {
                                      "func": {
                                        "signature_": {
                                          "args": [
                                            {
                                              "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                              "type": "String",
                                              "name": "leftField",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                              "type": "Object",
                                              "name": "rightValue",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                              "type": "String",
                                              "name": "rightField",
                                              "default": null,
                                              "optional": true
                                            },
                                            {
                                              "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                              "type": "Object",
                                              "name": "leftValue",
                                              "default": null,
                                              "optional": true
                                            }
                                          ],
                                          "description": "Creates a unary or binary filter that passes if the two operands are equals.",
                                          "returns": "Filter",
                                          "name": "Filter.equals"
                                        }
                                      },
                                      "args": {
                                        "leftField": {
                                          "func": null,
                                          "args": null,
                                          "varName": null,
                                          "sourceFrame": null,
                                          "string_": "NAME"
                                        },
                                        "rightValue": "Iowa"
                                      },
                                      "varName": null,
                                      "sourceFrame": null,
                                      "filter_": [
                                        {
                                          "func": {
                                            "signature_": {
                                              "args": [
                                                {
                                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                                  "type": "String",
                                                  "name": "leftField",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                                  "type": "Object",
                                                  "name": "rightValue",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                                  "type": "String",
                                                  "name": "rightField",
                                                  "default": null,
                                                  "optional": true
                                                },
                                                {
                                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                                  "type": "Object",
                                                  "name": "leftValue",
                                                  "default": null,
                                                  "optional": true
                                                }
                                              ],
                                              "description": "Creates a unary or binary filter that passes if the two operands are equals.",
                                              "returns": "Filter",
                                              "name": "Filter.equals"
                                            }
                                          },
                                          "args": {
                                            "leftField": {
                                              "func": null,
                                              "args": null,
                                              "varName": null,
                                              "sourceFrame": null,
                                              "string_": "NAME"
                                            },
                                            "rightValue": "Iowa"
                                          },
                                          "varName": null,
                                          "sourceFrame": null
                                        }
                                      ]
                                    }
                                  },
                                  "varName": null,
                                  "sourceFrame": null
                                }
                              },
                              "varName": null,
                              "sourceFrame": null
                            }
                          },
                          "varName": null,
                          "sourceFrame": null
                        }
                      },
                      "varName": null,
                      "sourceFrame": null
                    },
                    "bandNames": {
                      "func": null,
                      "args": null,
                      "varName": null,
                      "sourceFrame": null,
                      "list_": [
                        "B8",
                        "B4"
                      ]
                    }
                  },
                  "varName": null,
                  "sourceFrame": null
                },
                "names": {
                  "func": null,
                  "args": null,
                  "varName": null,
                  "sourceFrame": null,
                  "list_": [
                    "NDVI"
                  ]
                }
              },
              "varName": null,
              "sourceFrame": null
            },
            "geometry": {
              "func": {
                "signature_": {
                  "args": [
                    {
                      "description": "The feature from which the geometry is taken.",
                      "type": "Element",
                      "name": "feature",
                      "default": null
                    },
                    {
                      "description": "The maximum amount of error tolerated when performing any necessary reprojection.",
                      "type": "ErrorMargin",
                      "name": "maxError",
                      "default": null,
                      "optional": true
                    },
                    {
                      "description": "If specified, the geometry will be in this projection. If unspecified, the geometry will be in its default projection.",
                      "type": "Projection",
                      "name": "proj",
                      "default": null,
                      "optional": true
                    },
                    {
                      "description": "If true, the geometry will have geodesic edges. If false, it will have edges as straight lines in the specified projection. If null, the edge interpretation will be the same as the original geometry. This argument is ignored if proj is not specified.",
                      "type": "Boolean",
                      "name": "geodesics",
                      "default": null,
                      "optional": true
                    }
                  ],
                  "description": "Returns the geometry of a given feature in a given projection.",
                  "returns": "Geometry",
                  "hidden": true,
                  "name": "Element.geometry"
                }
              },
              "args": {
                "feature": {
                  "func": {
                    "signature_": {
                      "args": [
                        {
                          "description": "The collection from which to select the first entry.",
                          "type": "FeatureCollection",
                          "name": "collection",
                          "default": null
                        }
                      ],
                      "description": "Returns the first entry from a given collection.",
                      "returns": "Element",
                      "name": "Collection.first"
                    }
                  },
                  "args": {
                    "collection": {
                      "func": {
                        "signature_": {
                          "args": [
                            {
                              "description": "The collection to filter.",
                              "type": "FeatureCollection",
                              "name": "collection",
                              "default": null
                            },
                            {
                              "description": "The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g., \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not', and 'in' for inList.",
                              "type": "Object",
                              "name": "filter",
                              "default": null
                            }
                          ],
                          "description": "Applies a filter to a given collection.",
                          "returns": "FeatureCollection",
                          "name": "Collection.filter"
                        }
                      },
                      "args": {
                        "collection": {
                          "func": {
                            "signature_": {
                              "args": [
                                {
                                  "description": "The asset ID of the table to load.",
                                  "type": "String",
                                  "name": "tableId",
                                  "default": null
                                },
                                {
                                  "description": "The name of the column to use as the main feature geometry. Not used if tableId is an asset ID.",
                                  "type": "String",
                                  "name": "geometryColumn",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The version of the asset. -1 signifies the latest version. Ignored unless tableId is an asset ID.",
                                  "type": "Long",
                                  "name": "version",
                                  "default": null,
                                  "optional": true
                                }
                              ],
                              "description": "Returns a Collection of features from a specified table.",
                              "returns": "FeatureCollection",
                              "name": "Collection.loadTable"
                            }
                          },
                          "args": {
                            "tableId": "TIGER/2016/Counties"
                          },
                          "varName": null,
                          "sourceFrame": null
                        },
                        "filter": {
                          "func": {
                            "signature_": {
                              "args": [
                                {
                                  "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                  "type": "String",
                                  "name": "leftField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                  "type": "Object",
                                  "name": "rightValue",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                  "type": "String",
                                  "name": "rightField",
                                  "default": null,
                                  "optional": true
                                },
                                {
                                  "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                  "type": "Object",
                                  "name": "leftValue",
                                  "default": null,
                                  "optional": true
                                }
                              ],
                              "description": "Creates a unary or binary filter that passes if the two operands are equals.",
                              "returns": "Filter",
                              "name": "Filter.equals"
                            }
                          },
                          "args": {
                            "leftField": {
                              "func": null,
                              "args": null,
                              "varName": null,
                              "sourceFrame": null,
                              "string_": "NAME"
                            },
                            "rightValue": "Iowa"
                          },
                          "varName": null,
                          "sourceFrame": null,
                          "filter_": [
                            {
                              "func": {
                                "signature_": {
                                  "args": [
                                    {
                                      "description": "A selector for the left operand. Should not be specified if leftValue is specified.",
                                      "type": "String",
                                      "name": "leftField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the right operand. Should not be specified if rightField is specified.",
                                      "type": "Object",
                                      "name": "rightValue",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "A selector for the right operand. Should not be specified if rightValue is specified.",
                                      "type": "String",
                                      "name": "rightField",
                                      "default": null,
                                      "optional": true
                                    },
                                    {
                                      "description": "The value of the left operand. Should not be specified if leftField is specified.",
                                      "type": "Object",
                                      "name": "leftValue",
                                      "default": null,
                                      "optional": true
                                    }
                                  ],
                                  "description": "Creates a unary or binary filter that passes if the two operands are equals.",
                                  "returns": "Filter",
                                  "name": "Filter.equals"
                                }
                              },
                              "args": {
                                "leftField": {
                                  "func": null,
                                  "args": null,
                                  "varName": null,
                                  "sourceFrame": null,
                                  "string_": "NAME"
                                },
                                "rightValue": "Iowa"
                              },
                              "varName": null,
                              "sourceFrame": null
                            }
                          ]
                        }
                      },
                      "varName": null,
                      "sourceFrame": null
                    }
                  },
                  "varName": null,
                  "sourceFrame": null
                }
              },
              "varName": null,
              "sourceFrame": null
            }
          },
          "varName": null,
          "sourceFrame": null
        },
        "visualization": {
          "bands": [
            "NDVI"
          ],
          "min": -1,
          "max": 1,
          "palette": [
            "blue",
            "white",
            "green"
          ]
        },
        "interpretation": {
          "values": {
            "-1 to 0": "Water bodies",
            "0 to 0.2": "Bare soil, rocks, sand",
            "0.2 to 0.4": "Sparse vegetation",
            "0.4 to 0.6": "Moderate vegetation",
            "0.6 to 0.8": "Dense vegetation",
            "0.8 to 1": "Very dense vegetation"
          }
        },
        "nextSteps": "Use thumbnail operation with the ndvi_1757901971159 and visualization parameters to see the NDVI map"
      },
      "duration": 797
    },
    {
      "name": "Texas Cloud Mask",
      "status": "passed",
      "result": {
        "success": true,
        "operation": "mask",
        "message": "Operation mask completed",
        "result": null
      },
      "duration": 4
    },
    {
      "name": "Kansas Time Series",
      "status": "passed",
      "result": {
        "success": true,
        "operation": "analyze",
        "message": "Operation analyze completed",
        "result": null
      },
      "duration": 5
    },
    {
      "name": "Colorado Slope",
      "status": "passed",
      "result": {
        "success": true,
        "operation": "terrain",
        "message": "Operation terrain completed",
        "result": null
      },
      "duration": 4
    },
    {
      "name": "Nebraska Thumbnail",
      "status": "passed",
      "result": {
        "success": true,
        "operation": "thumbnail",
        "url": "https://earthengine.googleapis.com/v1/projects/earthengine-legacy/thumbnails/09c3d0648b47cb1ab787c55dc83d39a2-b89ca1c1d188d2781cafeae9915a3093:getPixels",
        "message": "Thumbnail generated successfully",
        "visualization": {
          "bands": [
            "B4",
            "B3",
            "B2"
          ],
          "min": 0,
          "max": 0.3,
          "gamma": 1.4
        },
        "dimensions": 512,
        "requestedDimensions": 512,
        "region": "Nebraska",
        "source": "COPERNICUS/S2_SR_HARMONIZED"
      },
      "duration": 5131
    },
    {
      "name": "Wyoming Export",
      "status": "passed",
      "result": {
        "success": true,
        "operation": "export",
        "taskId": "Y6XS6UYA7AGLQNNFW5LCTD5O",
        "status": "STARTED",
        "message": "Export task started successfully",
        "details": {
          "description": "export_1757901976583_2025-09-15T02-06-16-869Z",
          "destination": "auto",
          "fileNamePrefix": "export_1757901976583",
          "format": "GeoTIFF",
          "scale": 30,
          "maxPixels": 1000000000,
          "region": "Wyoming"
        },
        "instructions": {
          "checkStatus": "Use operation: 'status' with taskId: 'Y6XS6UYA7AGLQNNFW5LCTD5O' to check progress",
          "accessFile": "File will be available in Google Drive folder: My Drive/export_1757901976583*"
        }
      },
      "duration": 854
    },
    {
      "name": "Auth Check",
      "status": "passed",
      "result": {
        "success": true,
        "operation": "auth",
        "authenticated": true,
        "projectId": "stoked-flame-455410-k2",
        "credentialsPath": "Configured",
        "message": "Earth Engine authentication successful"
      },
      "duration": 182
    },
    {
      "name": "Health Check",
      "status": "passed",
      "result": {
        "success": true,
        "operation": "health",
        "status": "healthy",
        "earthEngine": "connected",
        "authentication": "valid",
        "timestamp": "2025-09-15T02:06:17.831Z",
        "message": "All systems operational"
      },
      "duration": 215
    },
    {
      "name": "California Map",
      "status": "failed",
      "error": "Either input or layers with individual inputs required",
      "duration": 2
    },
    {
      "name": "List Maps",
      "status": "passed",
      "result": {
        "success": true,
        "operation": "list",
        "count": 0,
        "maps": [],
        "message": "0 active map(s)"
      },
      "duration": 1
    },
    {
      "name": "Iowa Crop Classification",
      "status": "passed",
      "result": {
        "success": false,
        "error": "Invalid parameters",
        "details": [
          {
            "code": "invalid_union",
            "unionErrors": [
              {
                "issues": [
                  {
                    "code": "invalid_type",
                    "expected": "array",
                    "received": "object",
                    "path": [
                      "trainingData"
                    ],
                    "message": "Expected array, received object"
                  }
                ],
                "name": "ZodError"
              },
              {
                "issues": [
                  {
                    "code": "invalid_type",
                    "expected": "string",
                    "received": "object",
                    "path": [
                      "trainingData"
                    ],
                    "message": "Expected string, received object"
                  }
                ],
                "name": "ZodError"
              }
            ],
            "path": [
              "trainingData"
            ],
            "message": "Invalid input"
          }
        ]
      },
      "duration": 3
    },
    {
      "name": "Kansas Model Training",
      "status": "error",
      "error": "Timeout after 30000ms",
      "duration": 30008
    },
    {
      "name": "Invalid Dataset",
      "status": "passed",
      "result": {
        "success": true,
        "datasetId": "INVALID/DATASET",
        "imageCount": "Unknown (timeout)",
        "bandNames": [],
        "filters": {
          "startDate": "not specified",
          "endDate": "not specified",
          "region": "global",
          "cloudCoverMax": "not specified"
        },
        "message": "Filter applied but count timed out - collection may be very large",
        "warning": "ImageCollection.load: ImageCollection asset 'INVALID/DATASET' not found (does not exist or caller does not have access)."
      },
      "duration": 23615
    },
    {
      "name": "Missing Params",
      "status": "passed",
      "result": {
        "success": false,
        "operation": "index",
        "error": "indexType is required for index operation"
      },
      "duration": 2
    },
    {
      "name": "Large Region",
      "status": "passed",
      "result": {
        "success": true,
        "operation": "analyze",
        "message": "Operation analyze completed",
        "result": null
      },
      "duration": 2
    }
  ],
  "summary": {
    "total": 19,
    "passed": 17,
    "failed": 1,
    "errors": 1
  }
}